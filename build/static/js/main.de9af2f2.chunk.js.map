{"version":3,"sources":["components/Form/Form.js","App.js","index.js"],"names":["Form","props","state","isGoing","username","password","errors","handleInputChange","bind","handleSubmit","handleReset","e","this","setState","indexOf","alert","preventDefault","event","target","value","type","checked","name","className","onSubmit","src","alt","placeholder","onChange","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+OAoFeA,E,YAlFX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,SAAS,EACTC,SAAU,GACVC,SAAU,GACVC,QAAQ,GAEZ,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAVJ,E,yEAYPG,GACRC,KAAKC,SAAS,CAACV,SAAS,EACpBC,SAAU,GACVC,SAAU,GACVC,QAAQ,M,mCAGHK,GACT,IAAIL,GAAS,GACRM,KAAKV,MAAME,UAAYQ,KAAKV,MAAME,SAASU,QAAQ,KAAO,EAC3DR,GAAS,EACDM,KAAKV,MAAMG,UAEZO,KAAKV,MAAMC,UADlBG,GAAS,GAITA,EACAM,KAAKC,SAAS,CAACP,QAAQ,IAEvBS,MAAM,mBAAD,OAAoBH,KAAKV,MAAME,SAA/B,qBAETO,EAAEK,mB,wCAEYC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DG,EAAOJ,EAAOI,KACpBV,KAAKC,SAAL,eACKS,EAAOH,M,+BAIZ,OACI,6BACI,4BAAKP,KAAKX,MAAMqB,MAChB,0BAAMC,UAAU,QAAQC,SAAUZ,KAAKH,cAClCG,KAAKV,MAAMI,OAAS,yBAAKiB,UAAU,aAAY,0CAAqB,yBAAKE,IAAI,cAAcC,IAAI,YAAwB,KACxH,+BACI,2BACIH,UAAU,UACVD,KAAK,WACLF,KAAK,OACLO,YAAY,8BACZR,MAAOP,KAAKV,MAAME,SAClBwB,SAAUhB,KAAKL,qBAEvB,+BACI,2BACIgB,UAAU,UACVD,KAAK,WACLF,KAAK,WACLO,YAAY,WACZR,MAAOP,KAAKV,MAAMG,SAClBuB,SAAUhB,KAAKL,qBAEvB,2DAEI,2BACIe,KAAK,UACLF,KAAK,WACLC,QAAST,KAAKV,MAAMC,QACpByB,SAAUhB,KAAKL,qBAEvB,2BAAOgB,UAAU,SAASH,KAAK,SAASD,MAAM,YAC9C,2BAAOC,KAAK,QAAQS,QAASjB,KAAKF,oB,GA7EnCoB,IAAMC,WCYVC,MARf,WACE,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,CAAMD,KAAK,8BCJXtB,E,iLAEA,OACE,yBAAKuB,UAAU,QACX,kBAAC,EAAD,CAAKD,KAAM,iC,GAJJQ,IAAMC,WAYvBE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.de9af2f2.chunk.js","sourcesContent":["import React from 'react';\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isGoing: false,\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: false\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n    }\r\n    handleReset(e) {\r\n        this.setState({isGoing: false,\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: false}\r\n            )\r\n    }\r\n    handleSubmit(e) {\r\n        let errors = false;\r\n        if (!this.state.username || this.state.username.indexOf('@') < 0) {\r\n            errors = true;\r\n        } else if (!this.state.password) {\r\n            errors = true;\r\n        } else if(!this.state.isGoing) {\r\n            errors = true;\r\n        }\r\n        if (errors) {\r\n            this.setState({errors: true})\r\n        } else {\r\n            alert(`Congratulations ${this.state.username} you shall pass!`)\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.props.name}</h1>\r\n                <form className=\"forma\" onSubmit={this.handleSubmit}>\r\n                    {this.state.errors ? <div className=\"error-div\"><span>ERROR!!!</span><img src=\"./no-no.png\" alt=\"Error!\"></img></div> : null}\r\n                    <label>\r\n                        <input\r\n                            className=\"in-form\"\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            placeholder=\"johnnythedesigner@gmail.com\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange} />\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            className=\"in-form\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"********\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputChange} />\r\n                    </label>\r\n                    <label>\r\n                        Agree with all conditions\r\n                        <input\r\n                            name=\"isGoing\"\r\n                            type=\"checkbox\"\r\n                            checked={this.state.isGoing}\r\n                            onChange={this.handleInputChange} />\r\n                    </label>\r\n                    <input className=\"submit\" type=\"submit\" value=\"SIGN IN\" />\r\n                    <input type=\"reset\" onClick={this.handleReset}/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form;","import React from 'react';\nimport Form from './components/Form/Form';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form name=\"SIGN IN TO YOUR ACCOUNT\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App' \r\nclass Form extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"form\">         \r\n            <App name={\"SIGN IN TO YOUR ACCOUNT\"} />          \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Form />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}